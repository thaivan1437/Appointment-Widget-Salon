{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Documents/Outsoure/Salon-manager/belmont-beauty-salon/src/includes/SalonPicture/slider.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { CDN_URL } from \"../../env\";\nconst PREVIOUS = 'previous';\nconst NEXT = 'next';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nconst DEFAULT_CLASSNAMES = {\n  previousButton: 'previousButton',\n  nextButton: 'nextButton',\n  buttonDisabled: 'disabled',\n  track: 'track',\n  slide: 'slide',\n  hidden: 'hidden',\n  previous: 'previous',\n  current: 'current',\n  next: 'next',\n  animateIn: 'animateIn',\n  animateOut: 'animateOut'\n};\nconst DEFAULT_DURATION = 2000;\nconst arrowTransforms = {\n  up: 'rotate(90 10 15)',\n  down: 'rotate(270 10 15)',\n  left: 'rotate(180 10 15)',\n  right: 'rotate(0 10 15)'\n};\n\nfunction Arrow({\n  direction = 'right'\n}) {\n  return __jsx(\"img\", {\n    src: `${CDN_URL}/site/${direction}.png`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  });\n}\n\nclass Slider extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"setupAutoplay\", () => {\n      if (this.props.autoplay && !this.isMouseOver) {\n        this.stopAutoplay();\n        this.autoplayTimerId = setInterval(this.next, parseInt(this.props.autoplay, 10));\n      }\n    });\n\n    _defineProperty(this, \"stopAutoplay\", () => {\n      if (this.autoplayTimerId) {\n        clearInterval(this.autoplayTimerId);\n      }\n    });\n\n    _defineProperty(this, \"onAnimationEnd\", () => {\n      this.setState({\n        currentSlideIndex: this.nextSlideIndex,\n        animating: false,\n        animation: undefined\n      });\n      this.setupAutoplay();\n\n      if (typeof this.props.onSlideChange === 'function') {\n        this.props.onSlideChange({\n          slideIndex: this.nextSlideIndex\n        });\n      }\n    });\n\n    _defineProperty(this, \"isDisabled\", () => this.slideCount < 2 || this.state.animating || this.props.disabled);\n\n    _defineProperty(this, \"isInfinite\", () => this.slideCount > 2 && this.props.infinite !== false);\n\n    _defineProperty(this, \"canGoPrevious\", () => this.isInfinite() || this.state.currentSlideIndex > 0);\n\n    _defineProperty(this, \"canGoNext\", () => this.isInfinite() || this.state.currentSlideIndex < this.slideCount - 1);\n\n    _defineProperty(this, \"goTo\", (index, animation) => {\n      if (this.isDisabled()) return;\n      this.nextSlideIndex = index;\n      this.setState({\n        animating: true,\n        animation\n      });\n      const timeout = this.props.duration || DEFAULT_DURATION;\n      this.animationTimerId = setTimeout(this.onAnimationEnd, timeout);\n    });\n\n    _defineProperty(this, \"previous\", () => {\n      if (!this.canGoPrevious()) return;\n      const nextSlideIndex = this.state.currentSlideIndex - 1;\n      const actualNextSlide = nextSlideIndex >= 0 ? nextSlideIndex : this.slideCount - 1;\n      this.goTo(actualNextSlide, PREVIOUS);\n    });\n\n    _defineProperty(this, \"next\", () => {\n      if (!this.canGoNext()) return;\n      const nextSlideIndex = (this.state.currentSlideIndex + 1) % this.slideCount;\n      this.goTo(nextSlideIndex, NEXT);\n    });\n\n    _defineProperty(this, \"getSlideClass\", index => {\n      const {\n        currentSlideIndex,\n        animation\n      } = this.state;\n      const classNames = this.getClassNames();\n      const lastSlideIndex = this.slideCount - 1;\n\n      if (index === currentSlideIndex) {\n        if (animation) return `${classNames.animateOut} ${classNames[animation]}`;\n        return classNames.current;\n      }\n\n      if (this.slideCount === 2) {\n        if (animation) return `${classNames.animateIn} ${classNames[animation]}`;\n        return index < currentSlideIndex ? classNames.previous : classNames.next;\n      }\n\n      if (index === currentSlideIndex - 1 || currentSlideIndex === 0 && index === lastSlideIndex) {\n        if (animation === PREVIOUS) return `${classNames.animateIn} ${classNames.previous}`;\n        if (animation === NEXT) return classNames.hidden;\n        return classNames.previous;\n      }\n\n      if (index === currentSlideIndex + 1 || index === 0 && currentSlideIndex === lastSlideIndex) {\n        if (animation === NEXT) return `${classNames.animateIn} ${classNames.next}`;\n        if (animation === PREVIOUS) return classNames.hidden;\n        return classNames.next;\n      }\n\n      return classNames.hidden;\n    });\n\n    _defineProperty(this, \"isSwiping\", false);\n\n    _defineProperty(this, \"sliderRef\", void 0);\n\n    _defineProperty(this, \"pageStartPosition\", void 0);\n\n    _defineProperty(this, \"currentElement\", void 0);\n\n    _defineProperty(this, \"currentElementStartPosition\", void 0);\n\n    _defineProperty(this, \"currentElementPosition\", void 0);\n\n    _defineProperty(this, \"previousElement\", void 0);\n\n    _defineProperty(this, \"previousElementStartPosition\", void 0);\n\n    _defineProperty(this, \"previousElementPosition\", void 0);\n\n    _defineProperty(this, \"nextElement\", void 0);\n\n    _defineProperty(this, \"nextElementStartPosition\", void 0);\n\n    _defineProperty(this, \"nextElementPosition\", void 0);\n\n    _defineProperty(this, \"handleTouchStart\", e => {\n      if (this.isDisabled()) return;\n      this.stopAutoplay();\n      const {\n        current,\n        previous,\n        next\n      } = this.getClassNames();\n      const touch = e.touches[0];\n      this.isSwiping = true;\n      this.pageStartPosition = touch[this.swipeEventProperty];\n      /* eslint-disable prefer-destructuring */\n\n      this.currentElement = this.sliderRef.getElementsByClassName(current)[0];\n      this.previousElement = this.sliderRef.getElementsByClassName(previous)[0];\n      this.nextElement = this.sliderRef.getElementsByClassName(next)[0];\n      /* eslint-enable prefer-destructuring */\n\n      const touchDelta = this.currentElement.getBoundingClientRect()[this.swipeProperty];\n      this.currentElementStartPosition = 0;\n      this.currentElementPosition = 0;\n      this.currentElement.style.transition = 'none';\n\n      if (this.previousElement) {\n        this.previousElement.style.transition = 'none';\n        this.previousElement.style.visibility = 'visible'; // eslint-disable-next-line max-len\n\n        this.previousElementStartPosition = this.previousElement.getBoundingClientRect()[this.swipeProperty] - touchDelta;\n      }\n\n      if (this.nextElement) {\n        this.nextElement.style.visibility = 'visible';\n        this.nextElement.style.transition = 'none'; // eslint-disable-next-line max-len\n\n        this.nextElementStartPosition = this.nextElement.getBoundingClientRect()[this.swipeProperty] - touchDelta;\n      }\n    });\n\n    _defineProperty(this, \"animating\", false);\n\n    _defineProperty(this, \"handleTouchMove\", e => {\n      e.preventDefault();\n      this.animating = this.animating || requestAnimationFrame(() => {\n        if (!this.isSwiping) {\n          this.animating = false;\n          return;\n        }\n\n        const touch = e.touches[0];\n        const newLeft = touch[this.swipeEventProperty] - this.pageStartPosition;\n        this.currentElementPosition = this.currentElementStartPosition + newLeft;\n        this.currentElement.style[this.swipeProperty] = `${this.currentElementPosition}px`;\n\n        if (this.previousElement) {\n          this.previousElementPosition = this.previousElementStartPosition + newLeft;\n          this.previousElement.style[this.swipeProperty] = `${this.previousElementPosition}px`;\n        }\n\n        if (this.nextElement) {\n          this.nextElementPosition = this.nextElementStartPosition + newLeft;\n          this.nextElement.style[this.swipeProperty] = `${this.nextElementPosition}px`;\n        }\n\n        this.animating = false;\n      });\n    });\n\n    _defineProperty(this, \"handleTouchEnd\", () => {\n      this.animating = false;\n      this.isSwiping = false;\n      this.currentElement.style.removeProperty(this.swipeProperty);\n      this.currentElement.style.removeProperty('transition');\n\n      if (this.previousElement) {\n        this.previousElement.style.removeProperty('visibility');\n        this.previousElement.style.removeProperty('transition');\n        this.previousElement.style.removeProperty(this.swipeProperty);\n      }\n\n      if (this.nextElement) {\n        this.nextElement.style.removeProperty('visibility');\n        this.nextElement.style.removeProperty('transition');\n        this.nextElement.style.removeProperty(this.swipeProperty);\n      }\n\n      const touchDelta = this.currentElementStartPosition - this.currentElementPosition;\n      const minSwipeOffset = this.props.minSwipeOffset || 15;\n\n      if (Math.abs(touchDelta) > minSwipeOffset) {\n        if (touchDelta < 0) {\n          this.previous();\n        } else {\n          this.next();\n        }\n      } else {\n        this.setupAutoplay();\n      }\n    });\n\n    _defineProperty(this, \"getClassNames\", () => _objectSpread(_objectSpread({}, DEFAULT_CLASSNAMES), this.props.classNames));\n\n    _defineProperty(this, \"initTouchEvents\", sliderRef => {\n      if (this.isDisabled() || !sliderRef) return;\n      this.sliderRef = sliderRef;\n      this.sliderRef.addEventListener('touchstart', this.handleTouchStart);\n      this.sliderRef.addEventListener('touchmove', this.handleTouchMove, {\n        passive: false\n      });\n      this.sliderRef.addEventListener('touchend', this.handleTouchEnd);\n    });\n\n    _defineProperty(this, \"handleMouseOver\", () => {\n      this.isMouseOver = true;\n      this.stopAutoplay();\n    });\n\n    _defineProperty(this, \"handleMouseOut\", () => {\n      this.isMouseOver = false;\n      this.setupAutoplay();\n    });\n\n    const {\n      slideIndex = 0,\n      direction = HORIZONTAL\n    } = this.props;\n    this.state = {\n      currentSlideIndex: slideIndex,\n      animating: false\n    };\n    this.slideCount = React.Children.count(this.props.children);\n    this.direction = direction;\n    this.swipeProperty = direction === HORIZONTAL ? 'left' : 'top';\n    this.swipeEventProperty = direction === HORIZONTAL ? 'clientX' : 'clientY';\n  }\n\n  componentDidMount() {\n    this.setupAutoplay();\n  }\n\n  componentWillUnmount() {\n    this.stopAutoplay();\n\n    if (this.animationTimerId) {\n      clearTimeout(this.animationTimerId);\n    }\n  }\n\n  componentWillReceiveProps(props) {\n    this.slideCount = React.Children.count(props.children);\n\n    if (this.state.currentSlideIndex >= this.slideCount) {\n      this.setState({\n        currentSlideIndex: 0\n      });\n    }\n  }\n\n  render() {\n    const {\n      children,\n      className = 'slider',\n      previousButton = __jsx(Arrow, {\n        direction: this.direction === HORIZONTAL ? 'left' : 'down',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }\n      }),\n      nextButton = __jsx(Arrow, {\n        direction: this.direction === HORIZONTAL ? 'right' : 'up',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }\n      }),\n      touchDisabled,\n      autoplay\n    } = this.props;\n    const classNames = this.getClassNames();\n    const isDisabled = this.isDisabled();\n    return __jsx(\"div\", _extends({\n      className: classNames.slider || className\n    }, !touchDisabled && {\n      ref: this.initTouchEvents\n    }, autoplay && {\n      onMouseOver: this.handleMouseOver,\n      onMouseOut: this.handleMouseOut\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 4\n      }\n    }), __jsx(\"a\", {\n      onClick: this.previous,\n      className: `${classNames.previousButton}${isDisabled || !this.canGoPrevious() ? ` ${classNames.buttonDisabled}` : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 5\n      }\n    }, previousButton), __jsx(\"a\", {\n      onClick: this.next,\n      className: `${classNames.nextButton}${isDisabled || !this.canGoNext() ? ` ${classNames.buttonDisabled}` : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 5\n      }\n    }, nextButton), __jsx(\"div\", {\n      className: classNames.track,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 5\n      }\n    }, React.Children.map(children, (item, index) => /*#__PURE__*/React.cloneElement(item, {\n      key: index,\n      className: [classNames.slide, this.getSlideClass(index), item.props.className].filter(v => v).join(' ')\n    }))));\n  }\n\n}\n\nexport default Slider;","map":{"version":3,"sources":["/Users/macos/Documents/Outsoure/Salon-manager/belmont-beauty-salon/src/includes/SalonPicture/slider.js"],"names":["React","CDN_URL","PREVIOUS","NEXT","HORIZONTAL","VERTICAL","DEFAULT_CLASSNAMES","previousButton","nextButton","buttonDisabled","track","slide","hidden","previous","current","next","animateIn","animateOut","DEFAULT_DURATION","arrowTransforms","up","down","left","right","Arrow","direction","Slider","PureComponent","constructor","props","autoplay","isMouseOver","stopAutoplay","autoplayTimerId","setInterval","parseInt","clearInterval","setState","currentSlideIndex","nextSlideIndex","animating","animation","undefined","setupAutoplay","onSlideChange","slideIndex","slideCount","state","disabled","infinite","isInfinite","index","isDisabled","timeout","duration","animationTimerId","setTimeout","onAnimationEnd","canGoPrevious","actualNextSlide","goTo","canGoNext","classNames","getClassNames","lastSlideIndex","e","touch","touches","isSwiping","pageStartPosition","swipeEventProperty","currentElement","sliderRef","getElementsByClassName","previousElement","nextElement","touchDelta","getBoundingClientRect","swipeProperty","currentElementStartPosition","currentElementPosition","style","transition","visibility","previousElementStartPosition","nextElementStartPosition","preventDefault","requestAnimationFrame","newLeft","previousElementPosition","nextElementPosition","removeProperty","minSwipeOffset","Math","abs","addEventListener","handleTouchStart","handleTouchMove","passive","handleTouchEnd","Children","count","children","componentDidMount","componentWillUnmount","clearTimeout","componentWillReceiveProps","render","className","touchDisabled","slider","ref","initTouchEvents","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","map","item","cloneElement","key","getSlideClass","filter","v","join"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,IAAI,GAAG,MAAb;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AAEP,MAAMC,kBAAkB,GAAG;AAC1BC,EAAAA,cAAc,EAAE,gBADU;AAE1BC,EAAAA,UAAU,EAAE,YAFc;AAG1BC,EAAAA,cAAc,EAAE,UAHU;AAI1BC,EAAAA,KAAK,EAAE,OAJmB;AAK1BC,EAAAA,KAAK,EAAE,OALmB;AAM1BC,EAAAA,MAAM,EAAE,QANkB;AAO1BC,EAAAA,QAAQ,EAAE,UAPgB;AAQ1BC,EAAAA,OAAO,EAAE,SARiB;AAS1BC,EAAAA,IAAI,EAAE,MAToB;AAU1BC,EAAAA,SAAS,EAAE,WAVe;AAW1BC,EAAAA,UAAU,EAAE;AAXc,CAA3B;AAaA,MAAMC,gBAAgB,GAAG,IAAzB;AAEA,MAAMC,eAAe,GAAG;AACvBC,EAAAA,EAAE,EAAE,kBADmB;AAEvBC,EAAAA,IAAI,EAAE,mBAFiB;AAGvBC,EAAAA,IAAI,EAAE,mBAHiB;AAIvBC,EAAAA,KAAK,EAAE;AAJgB,CAAxB;;AAMA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAS,GAAG;AAAd,CAAf,EAAwC;AACvC,SACC;AAAK,IAAA,GAAG,EAAG,GAAExB,OAAQ,SAAQwB,SAAU,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAGA;;AAED,MAAMC,MAAN,SAAqB1B,KAAK,CAAC2B,aAA3B,CAAyC;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,2CAkCH,MAAM;AACrB,UAAI,KAAKA,KAAL,CAAWC,QAAX,IAAuB,CAAC,KAAKC,WAAjC,EAA8C;AAC7C,aAAKC,YAAL;AACA,aAAKC,eAAL,GAAuBC,WAAW,CACjC,KAAKnB,IAD4B,EAEjCoB,QAAQ,CAAC,KAAKN,KAAL,CAAWC,QAAZ,EAAsB,EAAtB,CAFyB,CAAlC;AAIA;AACD,KA1CkB;;AAAA,0CA4CJ,MAAM;AACpB,UAAI,KAAKG,eAAT,EAA0B;AACzBG,QAAAA,aAAa,CAAC,KAAKH,eAAN,CAAb;AACA;AACD,KAhDkB;;AAAA,4CAkDF,MAAM;AACtB,WAAKI,QAAL,CAAc;AACbC,QAAAA,iBAAiB,EAAE,KAAKC,cADX;AAEbC,QAAAA,SAAS,EAAE,KAFE;AAGbC,QAAAA,SAAS,EAAEC;AAHE,OAAd;AAKA,WAAKC,aAAL;;AACA,UAAI,OAAO,KAAKd,KAAL,CAAWe,aAAlB,KAAoC,UAAxC,EAAoD;AACnD,aAAKf,KAAL,CAAWe,aAAX,CAAyB;AAAEC,UAAAA,UAAU,EAAE,KAAKN;AAAnB,SAAzB;AACA;AACD,KA5DkB;;AAAA,wCA8DN,MAAM,KAAKO,UAAL,GAAkB,CAAlB,IAClB,KAAKC,KAAL,CAAWP,SADO,IAElB,KAAKX,KAAL,CAAWmB,QAhEO;;AAAA,wCAkEN,MAAM,KAAKF,UAAL,GAAkB,CAAlB,IAAuB,KAAKjB,KAAL,CAAWoB,QAAX,KAAwB,KAlE/C;;AAAA,2CAoEH,MAAM,KAAKC,UAAL,MAAqB,KAAKH,KAAL,CAAWT,iBAAX,GAA+B,CApEvD;;AAAA,uCAsEP,MAAM,KAAKY,UAAL,MAAqB,KAAKH,KAAL,CAAWT,iBAAX,GAA+B,KAAKQ,UAAL,GAAkB,CAtErE;;AAAA,kCAwEZ,CAACK,KAAD,EAAQV,SAAR,KAAsB;AAC5B,UAAI,KAAKW,UAAL,EAAJ,EAAuB;AACvB,WAAKb,cAAL,GAAsBY,KAAtB;AACA,WAAKd,QAAL,CAAc;AAAEG,QAAAA,SAAS,EAAE,IAAb;AAAmBC,QAAAA;AAAnB,OAAd;AACA,YAAMY,OAAO,GAAG,KAAKxB,KAAL,CAAWyB,QAAX,IAAuBpC,gBAAvC;AACA,WAAKqC,gBAAL,GAAwBC,UAAU,CAAC,KAAKC,cAAN,EAAsBJ,OAAtB,CAAlC;AACA,KA9EkB;;AAAA,sCAgFR,MAAM;AAChB,UAAI,CAAC,KAAKK,aAAL,EAAL,EAA2B;AAC3B,YAAMnB,cAAc,GAAG,KAAKQ,KAAL,CAAWT,iBAAX,GAA+B,CAAtD;AACA,YAAMqB,eAAe,GAAGpB,cAAc,IAAI,CAAlB,GAAsBA,cAAtB,GAAuC,KAAKO,UAAL,GAAkB,CAAjF;AACA,WAAKc,IAAL,CAAUD,eAAV,EAA2BzD,QAA3B;AACA,KArFkB;;AAAA,kCAuFZ,MAAM;AACZ,UAAI,CAAC,KAAK2D,SAAL,EAAL,EAAuB;AACvB,YAAMtB,cAAc,GAAG,CAAC,KAAKQ,KAAL,CAAWT,iBAAX,GAA+B,CAAhC,IAAqC,KAAKQ,UAAjE;AACA,WAAKc,IAAL,CAAUrB,cAAV,EAA0BpC,IAA1B;AACA,KA3FkB;;AAAA,2CA6FFgD,KAAD,IAAW;AAC1B,YAAM;AACLb,QAAAA,iBADK;AAELG,QAAAA;AAFK,UAGF,KAAKM,KAHT;AAIA,YAAMe,UAAU,GAAG,KAAKC,aAAL,EAAnB;AACA,YAAMC,cAAc,GAAG,KAAKlB,UAAL,GAAkB,CAAzC;;AACA,UAAIK,KAAK,KAAKb,iBAAd,EAAiC;AAChC,YAAIG,SAAJ,EAAe,OAAQ,GAAEqB,UAAU,CAAC7C,UAAW,IAAG6C,UAAU,CAACrB,SAAD,CAAY,EAAzD;AACf,eAAOqB,UAAU,CAAChD,OAAlB;AACA;;AACD,UAAI,KAAKgC,UAAL,KAAoB,CAAxB,EAA2B;AAC1B,YAAIL,SAAJ,EAAe,OAAQ,GAAEqB,UAAU,CAAC9C,SAAU,IAAG8C,UAAU,CAACrB,SAAD,CAAY,EAAxD;AACf,eAAOU,KAAK,GAAGb,iBAAR,GAA4BwB,UAAU,CAACjD,QAAvC,GAAkDiD,UAAU,CAAC/C,IAApE;AACA;;AACD,UACCoC,KAAK,KAAKb,iBAAiB,GAAG,CAA9B,IACCA,iBAAiB,KAAK,CAAtB,IAA2Ba,KAAK,KAAKa,cAFvC,EAGE;AACD,YAAIvB,SAAS,KAAKvC,QAAlB,EAA4B,OAAQ,GAAE4D,UAAU,CAAC9C,SAAU,IAAG8C,UAAU,CAACjD,QAAS,EAAtD;AAC5B,YAAI4B,SAAS,KAAKtC,IAAlB,EAAwB,OAAO2D,UAAU,CAAClD,MAAlB;AACxB,eAAOkD,UAAU,CAACjD,QAAlB;AACA;;AACD,UACCsC,KAAK,KAAKb,iBAAiB,GAAG,CAA9B,IACCa,KAAK,KAAK,CAAV,IAAeb,iBAAiB,KAAK0B,cAFvC,EAGE;AACD,YAAIvB,SAAS,KAAKtC,IAAlB,EAAwB,OAAQ,GAAE2D,UAAU,CAAC9C,SAAU,IAAG8C,UAAU,CAAC/C,IAAK,EAAlD;AACxB,YAAI0B,SAAS,KAAKvC,QAAlB,EAA4B,OAAO4D,UAAU,CAAClD,MAAlB;AAC5B,eAAOkD,UAAU,CAAC/C,IAAlB;AACA;;AACD,aAAO+C,UAAU,CAAClD,MAAlB;AACA,KA7HkB;;AAAA,uCAgIP,KAhIO;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,8CA+ICqD,CAAD,IAAO;AACzB,UAAI,KAAKb,UAAL,EAAJ,EAAuB;AACvB,WAAKpB,YAAL;AACA,YAAM;AAAElB,QAAAA,OAAF;AAAWD,QAAAA,QAAX;AAAqBE,QAAAA;AAArB,UAA8B,KAAKgD,aAAL,EAApC;AACA,YAAMG,KAAK,GAAGD,CAAC,CAACE,OAAF,CAAU,CAAV,CAAd;AACA,WAAKC,SAAL,GAAiB,IAAjB;AACA,WAAKC,iBAAL,GAAyBH,KAAK,CAAC,KAAKI,kBAAN,CAA9B;AACA;;AACA,WAAKC,cAAL,GAAsB,KAAKC,SAAL,CAAeC,sBAAf,CAAsC3D,OAAtC,EAA+C,CAA/C,CAAtB;AACA,WAAK4D,eAAL,GAAuB,KAAKF,SAAL,CAAeC,sBAAf,CAAsC5D,QAAtC,EAAgD,CAAhD,CAAvB;AACA,WAAK8D,WAAL,GAAmB,KAAKH,SAAL,CAAeC,sBAAf,CAAsC1D,IAAtC,EAA4C,CAA5C,CAAnB;AACA;;AACA,YAAM6D,UAAU,GAAG,KAAKL,cAAL,CAAoBM,qBAApB,GAA4C,KAAKC,aAAjD,CAAnB;AACA,WAAKC,2BAAL,GAAmC,CAAnC;AACA,WAAKC,sBAAL,GAA8B,CAA9B;AACA,WAAKT,cAAL,CAAoBU,KAApB,CAA0BC,UAA1B,GAAuC,MAAvC;;AACA,UAAI,KAAKR,eAAT,EAA0B;AACzB,aAAKA,eAAL,CAAqBO,KAArB,CAA2BC,UAA3B,GAAwC,MAAxC;AACA,aAAKR,eAAL,CAAqBO,KAArB,CAA2BE,UAA3B,GAAwC,SAAxC,CAFyB,CAGzB;;AACA,aAAKC,4BAAL,GAAoC,KAAKV,eAAL,CAAqBG,qBAArB,GAA6C,KAAKC,aAAlD,IAAmEF,UAAvG;AACA;;AACD,UAAI,KAAKD,WAAT,EAAsB;AACrB,aAAKA,WAAL,CAAiBM,KAAjB,CAAuBE,UAAvB,GAAoC,SAApC;AACA,aAAKR,WAAL,CAAiBM,KAAjB,CAAuBC,UAAvB,GAAoC,MAApC,CAFqB,CAGrB;;AACA,aAAKG,wBAAL,GAAgC,KAAKV,WAAL,CAAiBE,qBAAjB,GAAyC,KAAKC,aAA9C,IAA+DF,UAA/F;AACA;AACD,KA3KkB;;AAAA,uCA6KP,KA7KO;;AAAA,6CA+KAX,CAAD,IAAO;AACxBA,MAAAA,CAAC,CAACqB,cAAF;AACA,WAAK9C,SAAL,GAAiB,KAAKA,SAAL,IAChB+C,qBAAqB,CAAC,MAAM;AAC3B,YAAI,CAAC,KAAKnB,SAAV,EAAqB;AACpB,eAAK5B,SAAL,GAAiB,KAAjB;AACA;AACA;;AACD,cAAM0B,KAAK,GAAGD,CAAC,CAACE,OAAF,CAAU,CAAV,CAAd;AACA,cAAMqB,OAAO,GAAGtB,KAAK,CAAC,KAAKI,kBAAN,CAAL,GAAiC,KAAKD,iBAAtD;AACA,aAAKW,sBAAL,GAA8B,KAAKD,2BAAL,GAAmCS,OAAjE;AACA,aAAKjB,cAAL,CAAoBU,KAApB,CAA0B,KAAKH,aAA/B,IAAiD,GAAE,KAAKE,sBAAuB,IAA/E;;AACA,YAAI,KAAKN,eAAT,EAA0B;AACzB,eAAKe,uBAAL,GAA+B,KAAKL,4BAAL,GAAoCI,OAAnE;AACA,eAAKd,eAAL,CAAqBO,KAArB,CAA2B,KAAKH,aAAhC,IAAkD,GAAE,KAAKW,uBAAwB,IAAjF;AACA;;AACD,YAAI,KAAKd,WAAT,EAAsB;AACrB,eAAKe,mBAAL,GAA2B,KAAKL,wBAAL,GAAgCG,OAA3D;AACA,eAAKb,WAAL,CAAiBM,KAAjB,CAAuB,KAAKH,aAA5B,IAA8C,GAAE,KAAKY,mBAAoB,IAAzE;AACA;;AACD,aAAKlD,SAAL,GAAiB,KAAjB;AACA,OAlBoB,CADtB;AAoBA,KArMkB;;AAAA,4CAuMF,MAAM;AACtB,WAAKA,SAAL,GAAiB,KAAjB;AACA,WAAK4B,SAAL,GAAiB,KAAjB;AACA,WAAKG,cAAL,CAAoBU,KAApB,CAA0BU,cAA1B,CAAyC,KAAKb,aAA9C;AACA,WAAKP,cAAL,CAAoBU,KAApB,CAA0BU,cAA1B,CAAyC,YAAzC;;AACA,UAAI,KAAKjB,eAAT,EAA0B;AACzB,aAAKA,eAAL,CAAqBO,KAArB,CAA2BU,cAA3B,CAA0C,YAA1C;AACA,aAAKjB,eAAL,CAAqBO,KAArB,CAA2BU,cAA3B,CAA0C,YAA1C;AACA,aAAKjB,eAAL,CAAqBO,KAArB,CAA2BU,cAA3B,CAA0C,KAAKb,aAA/C;AACA;;AACD,UAAI,KAAKH,WAAT,EAAsB;AACrB,aAAKA,WAAL,CAAiBM,KAAjB,CAAuBU,cAAvB,CAAsC,YAAtC;AACA,aAAKhB,WAAL,CAAiBM,KAAjB,CAAuBU,cAAvB,CAAsC,YAAtC;AACA,aAAKhB,WAAL,CAAiBM,KAAjB,CAAuBU,cAAvB,CAAsC,KAAKb,aAA3C;AACA;;AACD,YAAMF,UAAU,GAAG,KAAKG,2BAAL,GAAmC,KAAKC,sBAA3D;AACA,YAAMY,cAAc,GAAG,KAAK/D,KAAL,CAAW+D,cAAX,IAA6B,EAApD;;AACA,UAAIC,IAAI,CAACC,GAAL,CAASlB,UAAT,IAAuBgB,cAA3B,EAA2C;AAC1C,YAAIhB,UAAU,GAAG,CAAjB,EAAoB;AACnB,eAAK/D,QAAL;AACA,SAFD,MAEO;AACN,eAAKE,IAAL;AACA;AACD,OAND,MAMO;AACN,aAAK4B,aAAL;AACA;AACD,KAjOkB;;AAAA,2CAmOH,sCAAYrC,kBAAZ,GAAmC,KAAKuB,KAAL,CAAWiC,UAA9C,CAnOG;;AAAA,6CAqOAU,SAAD,IAAe;AAChC,UAAI,KAAKpB,UAAL,MAAqB,CAACoB,SAA1B,EAAqC;AACrC,WAAKA,SAAL,GAAiBA,SAAjB;AACA,WAAKA,SAAL,CAAeuB,gBAAf,CAAgC,YAAhC,EAA8C,KAAKC,gBAAnD;AACA,WAAKxB,SAAL,CAAeuB,gBAAf,CAAgC,WAAhC,EAA6C,KAAKE,eAAlD,EAAmE;AAClEC,QAAAA,OAAO,EAAE;AADyD,OAAnE;AAGA,WAAK1B,SAAL,CAAeuB,gBAAf,CAAgC,UAAhC,EAA4C,KAAKI,cAAjD;AACA,KA7OkB;;AAAA,6CA+OD,MAAM;AACvB,WAAKpE,WAAL,GAAmB,IAAnB;AACA,WAAKC,YAAL;AACA,KAlPkB;;AAAA,4CAoPF,MAAM;AACtB,WAAKD,WAAL,GAAmB,KAAnB;AACA,WAAKY,aAAL;AACA,KAvPkB;;AAElB,UAAM;AACLE,MAAAA,UAAU,GAAG,CADR;AAELpB,MAAAA,SAAS,GAAGrB;AAFP,QAGF,KAAKyB,KAHT;AAIA,SAAKkB,KAAL,GAAa;AACZT,MAAAA,iBAAiB,EAAEO,UADP;AAEZL,MAAAA,SAAS,EAAE;AAFC,KAAb;AAIA,SAAKM,UAAL,GAAkB9C,KAAK,CAACoG,QAAN,CAAeC,KAAf,CAAqB,KAAKxE,KAAL,CAAWyE,QAAhC,CAAlB;AACA,SAAK7E,SAAL,GAAiBA,SAAjB;AACA,SAAKqD,aAAL,GAAqBrD,SAAS,KAAKrB,UAAd,GAA2B,MAA3B,GAAoC,KAAzD;AACA,SAAKkE,kBAAL,GAA0B7C,SAAS,KAAKrB,UAAd,GAA2B,SAA3B,GAAuC,SAAjE;AACA;;AAEDmG,EAAAA,iBAAiB,GAAG;AACnB,SAAK5D,aAAL;AACA;;AAED6D,EAAAA,oBAAoB,GAAG;AACtB,SAAKxE,YAAL;;AACA,QAAI,KAAKuB,gBAAT,EAA2B;AAC1BkD,MAAAA,YAAY,CAAC,KAAKlD,gBAAN,CAAZ;AACA;AACD;;AAEDmD,EAAAA,yBAAyB,CAAC7E,KAAD,EAAQ;AAChC,SAAKiB,UAAL,GAAkB9C,KAAK,CAACoG,QAAN,CAAeC,KAAf,CAAqBxE,KAAK,CAACyE,QAA3B,CAAlB;;AACA,QAAI,KAAKvD,KAAL,CAAWT,iBAAX,IAAgC,KAAKQ,UAAzC,EAAqD;AACpD,WAAKT,QAAL,CAAc;AAAEC,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AACA;AACD;;AAyNDqE,EAAAA,MAAM,GAAG;AACR,UAAM;AACLL,MAAAA,QADK;AAELM,MAAAA,SAAS,GAAG,QAFP;AAGLrG,MAAAA,cAAc,GAAG,MAAC,KAAD;AAAO,QAAA,SAAS,EAAE,KAAKkB,SAAL,KAAmBrB,UAAnB,GAAgC,MAAhC,GAAyC,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHZ;AAILI,MAAAA,UAAU,GAAG,MAAC,KAAD;AAAO,QAAA,SAAS,EAAE,KAAKiB,SAAL,KAAmBrB,UAAnB,GAAgC,OAAhC,GAA0C,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJR;AAKLyG,MAAAA,aALK;AAML/E,MAAAA;AANK,QAOF,KAAKD,KAPT;AAQA,UAAMiC,UAAU,GAAG,KAAKC,aAAL,EAAnB;AACA,UAAMX,UAAU,GAAG,KAAKA,UAAL,EAAnB;AACA,WACC;AACC,MAAA,SAAS,EAAEU,UAAU,CAACgD,MAAX,IAAqBF;AADjC,OAEK,CAACC,aAAD,IAAkB;AAAEE,MAAAA,GAAG,EAAE,KAAKC;AAAZ,KAFvB,EAGKlF,QAAQ,IAAI;AACfmF,MAAAA,WAAW,EAAE,KAAKC,eADH;AAEfC,MAAAA,UAAU,EAAE,KAAKC;AAFF,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQC;AACC,MAAA,OAAO,EAAE,KAAKvG,QADf;AAEC,MAAA,SAAS,EAAG,GAAEiD,UAAU,CAACvD,cAAe,GAAE6C,UAAU,IAAI,CAAC,KAAKM,aAAL,EAAf,GAAuC,IAAGI,UAAU,CAACrD,cAAe,EAApE,GAAwE,EAAG,EAFtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIEF,cAJF,CARD,EAcC;AACC,MAAA,OAAO,EAAE,KAAKQ,IADf;AAEC,MAAA,SAAS,EAAG,GAAE+C,UAAU,CAACtD,UAAW,GAAE4C,UAAU,IAAI,CAAC,KAAKS,SAAL,EAAf,GAAmC,IAAGC,UAAU,CAACrD,cAAe,EAAhE,GAAoE,EAAG,EAF9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIED,UAJF,CAdD,EAoBC;AAAK,MAAA,SAAS,EAAEsD,UAAU,CAACpD,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEV,KAAK,CAACoG,QAAN,CAAeiB,GAAf,CAAmBf,QAAnB,EAA6B,CAACgB,IAAD,EAAOnE,KAAP,kBAC7BnD,KAAK,CAACuH,YAAN,CAAmBD,IAAnB,EAAyB;AACxBE,MAAAA,GAAG,EAAErE,KADmB;AAExByD,MAAAA,SAAS,EAAE,CAAC9C,UAAU,CAACnD,KAAZ,EAAmB,KAAK8G,aAAL,CAAmBtE,KAAnB,CAAnB,EAA8CmE,IAAI,CAACzF,KAAL,CAAW+E,SAAzD,EAAoEc,MAApE,CAA2EC,CAAC,IAAIA,CAAhF,EAAmFC,IAAnF,CAAwF,GAAxF;AAFa,KAAzB,CADA,CADF,CApBD,CADD;AA+BA;;AApSuC;;AAsSzC,eAAelG,MAAf","sourcesContent":["import React from 'react';\nimport { CDN_URL } from \"../../env\";\nconst PREVIOUS = 'previous';\nconst NEXT = 'next';\n\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\n\nconst DEFAULT_CLASSNAMES = {\n\tpreviousButton: 'previousButton',\n\tnextButton: 'nextButton',\n\tbuttonDisabled: 'disabled',\n\ttrack: 'track',\n\tslide: 'slide',\n\thidden: 'hidden',\n\tprevious: 'previous',\n\tcurrent: 'current',\n\tnext: 'next',\n\tanimateIn: 'animateIn',\n\tanimateOut: 'animateOut',\n};\nconst DEFAULT_DURATION = 2000;\n\nconst arrowTransforms = {\n\tup: 'rotate(90 10 15)',\n\tdown: 'rotate(270 10 15)',\n\tleft: 'rotate(180 10 15)',\n\tright: 'rotate(0 10 15)',\n};\nfunction Arrow({ direction = 'right' }) {\n\treturn (\n\t\t<img src={`${CDN_URL}/site/${direction}.png`} />\n\t);\n}\n\nclass Slider extends React.PureComponent {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconst {\n\t\t\tslideIndex = 0,\n\t\t\tdirection = HORIZONTAL,\n\t\t} = this.props;\n\t\tthis.state = {\n\t\t\tcurrentSlideIndex: slideIndex,\n\t\t\tanimating: false,\n\t\t};\n\t\tthis.slideCount = React.Children.count(this.props.children);\n\t\tthis.direction = direction;\n\t\tthis.swipeProperty = direction === HORIZONTAL ? 'left' : 'top';\n\t\tthis.swipeEventProperty = direction === HORIZONTAL ? 'clientX' : 'clientY';\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setupAutoplay();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.stopAutoplay();\n\t\tif (this.animationTimerId) {\n\t\t\tclearTimeout(this.animationTimerId);\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(props) {\n\t\tthis.slideCount = React.Children.count(props.children);\n\t\tif (this.state.currentSlideIndex >= this.slideCount) {\n\t\t\tthis.setState({ currentSlideIndex: 0 });\n\t\t}\n\t}\n\n\tsetupAutoplay = () => {\n\t\tif (this.props.autoplay && !this.isMouseOver) {\n\t\t\tthis.stopAutoplay();\n\t\t\tthis.autoplayTimerId = setInterval(\n\t\t\t\tthis.next,\n\t\t\t\tparseInt(this.props.autoplay, 10),\n\t\t\t);\n\t\t}\n\t}\n\n\tstopAutoplay = () => {\n\t\tif (this.autoplayTimerId) {\n\t\t\tclearInterval(this.autoplayTimerId);\n\t\t}\n\t}\n\n\tonAnimationEnd = () => {\n\t\tthis.setState({\n\t\t\tcurrentSlideIndex: this.nextSlideIndex,\n\t\t\tanimating: false,\n\t\t\tanimation: undefined,\n\t\t});\n\t\tthis.setupAutoplay();\n\t\tif (typeof this.props.onSlideChange === 'function') {\n\t\t\tthis.props.onSlideChange({ slideIndex: this.nextSlideIndex });\n\t\t}\n\t};\n\n\tisDisabled = () => this.slideCount < 2 ||\n\t\tthis.state.animating ||\n\t\tthis.props.disabled;\n\n\tisInfinite = () => this.slideCount > 2 && this.props.infinite !== false;\n\n\tcanGoPrevious = () => this.isInfinite() || this.state.currentSlideIndex > 0;\n\n\tcanGoNext = () => this.isInfinite() || this.state.currentSlideIndex < this.slideCount - 1;\n\n\tgoTo = (index, animation) => {\n\t\tif (this.isDisabled()) return;\n\t\tthis.nextSlideIndex = index;\n\t\tthis.setState({ animating: true, animation });\n\t\tconst timeout = this.props.duration || DEFAULT_DURATION;\n\t\tthis.animationTimerId = setTimeout(this.onAnimationEnd, timeout);\n\t};\n\n\tprevious = () => {\n\t\tif (!this.canGoPrevious()) return;\n\t\tconst nextSlideIndex = this.state.currentSlideIndex - 1;\n\t\tconst actualNextSlide = nextSlideIndex >= 0 ? nextSlideIndex : this.slideCount - 1;\n\t\tthis.goTo(actualNextSlide, PREVIOUS);\n\t};\n\n\tnext = () => {\n\t\tif (!this.canGoNext()) return;\n\t\tconst nextSlideIndex = (this.state.currentSlideIndex + 1) % this.slideCount;\n\t\tthis.goTo(nextSlideIndex, NEXT);\n\t};\n\n\tgetSlideClass = (index) => {\n\t\tconst {\n\t\t\tcurrentSlideIndex,\n\t\t\tanimation,\n\t\t} = this.state;\n\t\tconst classNames = this.getClassNames();\n\t\tconst lastSlideIndex = this.slideCount - 1;\n\t\tif (index === currentSlideIndex) {\n\t\t\tif (animation) return `${classNames.animateOut} ${classNames[animation]}`;\n\t\t\treturn classNames.current;\n\t\t}\n\t\tif (this.slideCount === 2) {\n\t\t\tif (animation) return `${classNames.animateIn} ${classNames[animation]}`;\n\t\t\treturn index < currentSlideIndex ? classNames.previous : classNames.next;\n\t\t}\n\t\tif (\n\t\t\tindex === currentSlideIndex - 1 ||\n\t\t\t(currentSlideIndex === 0 && index === lastSlideIndex)\n\t\t) {\n\t\t\tif (animation === PREVIOUS) return `${classNames.animateIn} ${classNames.previous}`;\n\t\t\tif (animation === NEXT) return classNames.hidden;\n\t\t\treturn classNames.previous;\n\t\t}\n\t\tif (\n\t\t\tindex === currentSlideIndex + 1 ||\n\t\t\t(index === 0 && currentSlideIndex === lastSlideIndex)\n\t\t) {\n\t\t\tif (animation === NEXT) return `${classNames.animateIn} ${classNames.next}`;\n\t\t\tif (animation === PREVIOUS) return classNames.hidden;\n\t\t\treturn classNames.next;\n\t\t}\n\t\treturn classNames.hidden;\n\t};\n\n\t/* eslint-disable lines-between-class-members */\n\tisSwiping = false;\n\tsliderRef;\n\tpageStartPosition;\n\n\tcurrentElement;\n\tcurrentElementStartPosition;\n\tcurrentElementPosition;\n\tpreviousElement;\n\tpreviousElementStartPosition;\n\tpreviousElementPosition;\n\tnextElement;\n\tnextElementStartPosition;\n\tnextElementPosition;\n\t/* eslint-enable lines-between-class-members */\n\n\thandleTouchStart = (e) => {\n\t\tif (this.isDisabled()) return;\n\t\tthis.stopAutoplay();\n\t\tconst { current, previous, next } = this.getClassNames();\n\t\tconst touch = e.touches[0];\n\t\tthis.isSwiping = true;\n\t\tthis.pageStartPosition = touch[this.swipeEventProperty];\n\t\t/* eslint-disable prefer-destructuring */\n\t\tthis.currentElement = this.sliderRef.getElementsByClassName(current)[0];\n\t\tthis.previousElement = this.sliderRef.getElementsByClassName(previous)[0];\n\t\tthis.nextElement = this.sliderRef.getElementsByClassName(next)[0];\n\t\t/* eslint-enable prefer-destructuring */\n\t\tconst touchDelta = this.currentElement.getBoundingClientRect()[this.swipeProperty];\n\t\tthis.currentElementStartPosition = 0;\n\t\tthis.currentElementPosition = 0;\n\t\tthis.currentElement.style.transition = 'none';\n\t\tif (this.previousElement) {\n\t\t\tthis.previousElement.style.transition = 'none';\n\t\t\tthis.previousElement.style.visibility = 'visible';\n\t\t\t// eslint-disable-next-line max-len\n\t\t\tthis.previousElementStartPosition = this.previousElement.getBoundingClientRect()[this.swipeProperty] - touchDelta;\n\t\t}\n\t\tif (this.nextElement) {\n\t\t\tthis.nextElement.style.visibility = 'visible';\n\t\t\tthis.nextElement.style.transition = 'none';\n\t\t\t// eslint-disable-next-line max-len\n\t\t\tthis.nextElementStartPosition = this.nextElement.getBoundingClientRect()[this.swipeProperty] - touchDelta;\n\t\t}\n\t};\n\n\tanimating = false;\n\n\thandleTouchMove = (e) => {\n\t\te.preventDefault();\n\t\tthis.animating = this.animating ||\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tif (!this.isSwiping) {\n\t\t\t\t\tthis.animating = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst touch = e.touches[0];\n\t\t\t\tconst newLeft = touch[this.swipeEventProperty] - this.pageStartPosition;\n\t\t\t\tthis.currentElementPosition = this.currentElementStartPosition + newLeft;\n\t\t\t\tthis.currentElement.style[this.swipeProperty] = `${this.currentElementPosition}px`;\n\t\t\t\tif (this.previousElement) {\n\t\t\t\t\tthis.previousElementPosition = this.previousElementStartPosition + newLeft;\n\t\t\t\t\tthis.previousElement.style[this.swipeProperty] = `${this.previousElementPosition}px`;\n\t\t\t\t}\n\t\t\t\tif (this.nextElement) {\n\t\t\t\t\tthis.nextElementPosition = this.nextElementStartPosition + newLeft;\n\t\t\t\t\tthis.nextElement.style[this.swipeProperty] = `${this.nextElementPosition}px`;\n\t\t\t\t}\n\t\t\t\tthis.animating = false;\n\t\t\t});\n\t};\n\n\thandleTouchEnd = () => {\n\t\tthis.animating = false;\n\t\tthis.isSwiping = false;\n\t\tthis.currentElement.style.removeProperty(this.swipeProperty);\n\t\tthis.currentElement.style.removeProperty('transition');\n\t\tif (this.previousElement) {\n\t\t\tthis.previousElement.style.removeProperty('visibility');\n\t\t\tthis.previousElement.style.removeProperty('transition');\n\t\t\tthis.previousElement.style.removeProperty(this.swipeProperty);\n\t\t}\n\t\tif (this.nextElement) {\n\t\t\tthis.nextElement.style.removeProperty('visibility');\n\t\t\tthis.nextElement.style.removeProperty('transition');\n\t\t\tthis.nextElement.style.removeProperty(this.swipeProperty);\n\t\t}\n\t\tconst touchDelta = this.currentElementStartPosition - this.currentElementPosition;\n\t\tconst minSwipeOffset = this.props.minSwipeOffset || 15;\n\t\tif (Math.abs(touchDelta) > minSwipeOffset) {\n\t\t\tif (touchDelta < 0) {\n\t\t\t\tthis.previous();\n\t\t\t} else {\n\t\t\t\tthis.next();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setupAutoplay();\n\t\t}\n\t};\n\n\tgetClassNames = () => ({ ...DEFAULT_CLASSNAMES, ...this.props.classNames });\n\n\tinitTouchEvents = (sliderRef) => {\n\t\tif (this.isDisabled() || !sliderRef) return;\n\t\tthis.sliderRef = sliderRef;\n\t\tthis.sliderRef.addEventListener('touchstart', this.handleTouchStart);\n\t\tthis.sliderRef.addEventListener('touchmove', this.handleTouchMove, {\n\t\t\tpassive: false,\n\t\t});\n\t\tthis.sliderRef.addEventListener('touchend', this.handleTouchEnd);\n\t}\n\n\thandleMouseOver = () => {\n\t\tthis.isMouseOver = true;\n\t\tthis.stopAutoplay();\n\t}\n\n\thandleMouseOut = () => {\n\t\tthis.isMouseOver = false;\n\t\tthis.setupAutoplay();\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tchildren,\n\t\t\tclassName = 'slider',\n\t\t\tpreviousButton = <Arrow direction={this.direction === HORIZONTAL ? 'left' : 'down'} />,\n\t\t\tnextButton = <Arrow direction={this.direction === HORIZONTAL ? 'right' : 'up'} />,\n\t\t\ttouchDisabled,\n\t\t\tautoplay,\n\t\t} = this.props;\n\t\tconst classNames = this.getClassNames();\n\t\tconst isDisabled = this.isDisabled();\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames.slider || className}\n\t\t\t\t{...!touchDisabled && { ref: this.initTouchEvents }}\n\t\t\t\t{...autoplay && {\n\t\t\t\t\tonMouseOver: this.handleMouseOver,\n\t\t\t\t\tonMouseOut: this.handleMouseOut,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<a\n\t\t\t\t\tonClick={this.previous}\n\t\t\t\t\tclassName={`${classNames.previousButton}${isDisabled || !this.canGoPrevious() ? ` ${classNames.buttonDisabled}` : ''}`}\n\t\t\t\t>\n\t\t\t\t\t{previousButton}\n\t\t\t\t</a>\n\t\t\t\t<a\n\t\t\t\t\tonClick={this.next}\n\t\t\t\t\tclassName={`${classNames.nextButton}${isDisabled || !this.canGoNext() ? ` ${classNames.buttonDisabled}` : ''}`}\n\t\t\t\t>\n\t\t\t\t\t{nextButton}\n\t\t\t\t</a>\n\t\t\t\t<div className={classNames.track}>\n\t\t\t\t\t{React.Children.map(children, (item, index) => (\n\t\t\t\t\t\tReact.cloneElement(item, {\n\t\t\t\t\t\t\tkey: index,\n\t\t\t\t\t\t\tclassName: [classNames.slide, this.getSlideClass(index), item.props.className].filter(v => v).join(' '),\n\t\t\t\t\t\t})\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}